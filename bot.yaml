AWSTemplateFormatVersion: 2010-09-09
Description: Parameterized API Gateway + Lambda + S3 for audit logs with unique bucket name

Parameters:
  LambdaFunctionName:
    Type: String
    Default: api-lambda
    Description: Name of the Lambda function.

  LambdaRuntime:
    Type: String
    Default: python3.11
    AllowedValues:
      - python3.9
      - python3.10
      - python3.11
      - nodejs16.x
      - nodejs18.x
    Description: Lambda runtime environment.

  ApiName:
    Type: String
    Default: chat-api
    Description: Name of the API Gateway REST API.

  ApiStageName:
    Type: String
    Default: dev
    Description: Deployment stage name for API Gateway.

  AuditBucketName:
    Type: String
    Default: audit-logs-bucket
    Description: Base name for the S3 bucket to store audit logs.

Resources:

  ### S3 Bucket for Audit Logs
  AuditBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AuditBucketName}-${AWS::AccountId}-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled

  ### Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-lambda-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${AuditBucketName}-${AWS::AccountId}-${AWS::Region}/*"

  ### Lambda Function
  APILambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Runtime: !Ref LambdaRuntime
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import json
          import boto3
          import os

          s3 = boto3.client('s3')
          bucket_name = os.environ.get('AUDIT_BUCKET')

          def lambda_handler(event, context):
              key = f"audit-{context.aws_request_id}.json"
              s3.put_object(Bucket=bucket_name, Key=key, Body=json.dumps(event))

              return {
                  'statusCode': 200,
                  'headers': {'Content-Type': 'application/json'},
                  'body': json.dumps({'message': 'Request logged successfully'})
              }
      Environment:
        Variables:
          AUDIT_BUCKET: !Sub "${AuditBucketName}-${AWS::AccountId}-${AWS::Region}"

  ### API Gateway
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiName
      EndpointConfiguration:
        Types:
          - REGIONAL

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: "chat"

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambdaFunction.Arn}/invocations

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethod
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      StageName: !Ref ApiStageName

  ### Lambda Permission for API Gateway
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref APILambdaFunction
      Principal: apigateway.amazonaws.com

Outputs:
  ApiInvokeURL:
    Description: "Invoke URL for the API Gateway"
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/chat"

  AuditBucketArn:
    Description: "ARN of the S3 audit bucket"
    Value: !GetAtt AuditBucket.Arn

  LambdaFunctionArn:
    Description: "ARN of the Lambda function"
    Value: !GetAtt APILambdaFunction.Arn

  LambdaRoleArn:
    Description: "ARN of the Lambda Execution Role"
    Value: !GetAtt LambdaExecutionRole.Arn

  ApiGatewayArn:
    Description: "ARN of the API Gateway REST API"
    Value: !Sub "arn:aws:apigateway:${AWS::Region}::/restapis/${ApiGatewayRestApi}"
